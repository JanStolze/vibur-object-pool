Version 6.1 (05/01/2016)
========================
* Catching-up with Vibur DBCP version 6.1.

Version 6.0 (19/12/2015)
==========================
* The call to PoolObjectFactory.destroy()Â is now included in a try-finally block after calling
  PoolObjectFactory.readyToTake() or PoolObjectFactory.readyToRestore().

Version 5.0 (24/08/2015)
==========================
* Catching-up with Vibur DBCP version 5.0.
* Javadoc updates.

Version 4.0 (08/08/2015)
==========================
* Catching-up with Vibur DBCP version 4.0.
* Various other refactoring and javadoc updates.

Version 3.0 (03/06/2015)
==========================
* Modified the SamplingPoolReducer pool shrinking algorithm to allow the number of allocated on the
  pool objects to reach zero.
* Modified the SamplingPoolReducer logic to allow the afterReduce() method to be called even if the
  intended pool reduction is zero - useful for reporting/logging purposes.
* Migrated the project to single digit version numbers, similarly to Vibur DBCP project.

Version 2.0.0 (02/06/2014)
==========================
* Overhauled the existing in version 1.0 validating and non-validating object pools and replaced
  them with a single object pool that does not provide any special validation means, but provides
  support for a Listener interface which methods will be called upon calling the pool take and
  restore operations.
* Vibur Object Pool is now built and distributed as a valid R4 OSGi bundle.

Version 1.0.0 (02/02/2014)
==========================
* Making all vibur-dbcp dependencies having equal release version.

Version 0.8.9 (15/10/2013)
==========================
* Bug fix and refactoring.

Version 0.8.8 (25/08/2013)
==========================
* Minor refactoring and comments fixes.
* The pool reducer functionality was re-implemented in the SamplingPoolReducer class.

Version 0.8.7 (10/08/2013)
==========================
* Packages structure refactoring.

Version 0.8.6 (26/07/2013)
==========================
* Minor refactoring, dependencies versions update.

Version 0.8.5 (28/06/2013)
==========================
* Fix in ConcurrentHolderLinkedPool, aiming to prevent the possibility that an object taken from
  one pool can be returned to another.
* Changed the build artifact name to use "-" instead of "_".

Version 0.8.4 (18/02/2013)
==========================
* restore(Object, boolean valid) method introduced in the pool interfaces.
* afterReduce(int, int, Throwable) method added in PoolReducer class.
* Minor refactoring, improved javadoc, bug fix,
  lazily creates new objects if validates on restore fails.

Version 0.8.3 (06/02/2013)
==========================
* Minor refactoring, docs update.

Version 0.8.2 (05/02/2013)
==========================
* Major refactoring, have changed interface methods names,
  have added more information in the README file.

Version 0.8.1 (31/01/2013)
==========================
* Changed the reduceCreated(int) and drainCreated() contracts to allows the
  createdTotal() to become less than the initialSize(). I.e. a call to
  reduceCreated(int) may bring the number of created objects in the pool to zero.

Version 0.8.0 (30/01/2013)
==========================
* First tagged release.
